module CruiseRegulation:
function  regulateThrottle(integer, float, float) : float;

input ResetPID, BrakePressed, AccelPressed, UseAuto;

input Accel : float;
input Brake : float;
input CruiseSpeed : float;
input Speed : float;

output ThrottleCmd : float;

var ThrottleTemp := 0.0f : float in

loop
trap T1 in
loop
    trap T2 in 
	pause;
		present ResetPID then
			ThrottleTemp := regulateThrottle(1, ?CruiseSpeed, ?Speed);
		else
			ThrottleTemp := regulateThrottle(0, ?CruiseSpeed, ?Speed);
		end present;

		present not UseAuto then
			present AccelPressed then
				ThrottleTemp := ?Accel;
			end present;
			
			present BrakePressed then
				ThrottleTemp := 0.0f;
			end present;
		end present;
		emit ThrottleCmd(ThrottleTemp);
     end trap
end loop
end trap
end loop
end var
end module

