% >>> CRUISESPEEDRESOLVER_STRL

module CruiseSpeedResolver:

input QuickAccel;
input QuickDecel;
input SetSpeed;
input FirstOn;
input Speed : float;

output CruiseSpeed := 30.0f : float;

constant SpeedInc = 2.5f : float; 
constant SpeedMax = 150.0f : float;
constant SpeedMin = 30.0f : float;

var temp := 0.0f : float in
loop
	present FirstOn then
		temp := ?Speed;
	end present;
	present 
	case (SetSpeed) do
		if ?Speed < SpeedMax and ?Speed > SpeedMin then
			temp := ?Speed;
		end if;
	case (QuickAccel and not QuickDecel) do
		if (temp + SpeedInc) < SpeedMax then
			temp := temp + SpeedInc;
		end if;
	case (QuickDecel and not QuickAccel) do
		if (temp - SpeedInc) > SpeedMin then
			temp := temp - SpeedInc;
		end if;
	end present;
	emit CruiseSpeed(temp);
each tick;
end var;

end module

% >>> CRUISESPEEDRESOLVER_STRL_END
